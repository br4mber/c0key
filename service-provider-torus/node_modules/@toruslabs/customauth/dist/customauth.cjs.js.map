{"version":3,"file":"customauth.cjs.js","mappings":"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","sources":["webpack://@toruslabs/customauth/webpack/bootstrap","webpack://@toruslabs/customauth/webpack/runtime/compat get default export","webpack://@toruslabs/customauth/webpack/runtime/define property getters","webpack://@toruslabs/customauth/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/customauth/webpack/runtime/make namespace object","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/fetch-node-details\"","webpack://@toruslabs/customauth/./src/utils/enums.ts","webpack://@toruslabs/customauth/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@toruslabs/customauth/external commonjs2 \"lodash.merge\"","webpack://@toruslabs/customauth/external commonjs2 \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/broadcast-channel\"","webpack://@toruslabs/customauth/external commonjs2 \"bowser\"","webpack://@toruslabs/customauth/external commonjs2 \"loglevel\"","webpack://@toruslabs/customauth/./src/utils/loglevel.ts","webpack://@toruslabs/customauth/./src/utils/helpers.ts","webpack://@toruslabs/customauth/external commonjs2 \"events\"","webpack://@toruslabs/customauth/./src/utils/PopupHandler.ts","webpack://@toruslabs/customauth/./src/handlers/AbstractLoginHandler.ts","webpack://@toruslabs/customauth/./src/handlers/DiscordHandler.ts","webpack://@toruslabs/customauth/./src/handlers/FacebookHandler.ts","webpack://@toruslabs/customauth/./src/handlers/GoogleHandler.ts","webpack://@toruslabs/customauth/external commonjs2 \"jwt-decode\"","webpack://@toruslabs/customauth/./src/handlers/JwtHandler.ts","webpack://@toruslabs/customauth/./src/handlers/MockLoginHandler.ts","webpack://@toruslabs/customauth/./src/handlers/PasswordlessHandler.ts","webpack://@toruslabs/customauth/./src/handlers/RedditHandler.ts","webpack://@toruslabs/customauth/./src/handlers/TwitchHandler.ts","webpack://@toruslabs/customauth/./src/handlers/WebAuthnHandler.ts","webpack://@toruslabs/customauth/./src/handlers/HandlerFactory.ts","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/torus.js\"","webpack://@toruslabs/customauth/external commonjs2 \"web3-utils\"","webpack://@toruslabs/customauth/external commonjs2 \"@chaitanyapotti/register-service-worker\"","webpack://@toruslabs/customauth/./src/registerServiceWorker.ts","webpack://@toruslabs/customauth/./src/sentry.ts","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/eccrypto\"","webpack://@toruslabs/customauth/external commonjs2 \"@toruslabs/metadata-helpers\"","webpack://@toruslabs/customauth/./src/utils/StorageHelper.ts","webpack://@toruslabs/customauth/./src/login.ts","webpack://@toruslabs/customauth/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/fetch-node-details\");","import NodeDetailManager, { TORUS_NETWORK } from \"@toruslabs/fetch-node-details\";\n\nexport const LOGIN = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  GITHUB: \"github\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  LINE: \"line\",\n  EMAIL_PASSWORD: \"email_password\",\n  PASSWORDLESS: \"passwordless\",\n  JWT: \"jwt\",\n  WEBAUTHN: \"webauthn\",\n} as const;\n\nexport const AGGREGATE_VERIFIER = {\n  SINGLE_VERIFIER_ID: \"single_id_verifier\",\n  // AND_AGGREGATE_VERIFIER : \"and_aggregate_verifier\",\n  // OR_AGGREGATE_VERIFIER : \"or_aggregate_verifier\",\n} as const;\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const REDIRECT_PARAMS_STORAGE_METHOD = {\n  LOCAL_STORAGE: \"localStorage\",\n  SESSION_STORAGE: \"sessionStorage\",\n  SERVER: \"server\",\n};\n\nexport const TORUS_METHOD = {\n  TRIGGER_LOGIN: \"triggerLogin\",\n  TRIGGER_AGGREGATE_LOGIN: \"triggerAggregateLogin\",\n  TRIGGER_AGGREGATE_HYBRID_LOGIN: \"triggerHybridAggregateLogin\",\n} as const;\n\nexport type LOGIN_TYPE = (typeof LOGIN)[keyof typeof LOGIN];\nexport type AGGREGATE_VERIFIER_TYPE = (typeof AGGREGATE_VERIFIER)[keyof typeof AGGREGATE_VERIFIER];\nexport type UX_MODE_TYPE = (typeof UX_MODE)[keyof typeof UX_MODE];\nexport type TORUS_METHOD_TYPE = (typeof TORUS_METHOD)[keyof typeof TORUS_METHOD];\nexport type REDIRECT_PARAMS_STORAGE_METHOD_TYPE = (typeof REDIRECT_PARAMS_STORAGE_METHOD)[keyof typeof REDIRECT_PARAMS_STORAGE_METHOD];\n\nexport const CONTRACT_MAP = {\n  [TORUS_NETWORK.MAINNET]: NodeDetailManager.PROXY_ADDRESS_MAINNET,\n  [TORUS_NETWORK.TESTNET]: NodeDetailManager.PROXY_ADDRESS_TESTNET,\n  [TORUS_NETWORK.CYAN]: NodeDetailManager.PROXY_ADDRESS_CYAN,\n  [TORUS_NETWORK.AQUA]: NodeDetailManager.PROXY_ADDRESS_AQUA,\n  [TORUS_NETWORK.CELESTE]: NodeDetailManager.PROXY_ADDRESS_CELESTE,\n};\n\nexport const SIGNER_MAP = {\n  [TORUS_NETWORK.MAINNET]: \"https://signer.tor.us\",\n  [TORUS_NETWORK.TESTNET]: \"https://signer.tor.us\",\n  [TORUS_NETWORK.CYAN]: \"https://signer-polygon.tor.us\",\n  [TORUS_NETWORK.AQUA]: \"https://signer-polygon.tor.us\",\n  [TORUS_NETWORK.CELESTE]: \"https://signer-polygon.tor.us\",\n};\n\nexport const SENTRY_TXNS = {\n  FETCH_NODE_DETAILS: \"fetchNodeDetails\",\n  PUB_ADDRESS_LOOKUP: \"pubAddressLookup\",\n  FETCH_SHARES: \"fetchShares\",\n} as const;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/broadcast-channel\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bowser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"customauth\");\n","import Bowser from \"bowser\";\n\nimport { Auth0UserInfo, TorusGenericObject } from \"../handlers/interfaces\";\nimport { LOGIN, LOGIN_TYPE, REDIRECT_PARAMS_STORAGE_METHOD_TYPE } from \"./enums\";\nimport log from \"./loglevel\";\ninterface CustomMessageEvent extends MessageEvent {\n  error: string;\n}\n\ninterface EventListener {\n  (evt: CustomMessageEvent): void;\n}\n\ntype EmitterType = { addEventListener(type: string, handler: EventListener): void; removeEventListener(type: string, handler: EventListener): void };\n\nexport function eventToPromise<T>(emitter: EmitterType): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    const handler = (ev: CustomMessageEvent) => {\n      const { error = \"\", data } = ev;\n      emitter.removeEventListener(\"message\", handler);\n      if (error) return reject(new Error(error));\n      return resolve(data as T);\n    };\n    emitter.addEventListener(\"message\", handler);\n  });\n}\n\n// These are the connection names used by auth0\nexport const loginToConnectionMap = {\n  [LOGIN.APPLE]: \"apple\",\n  [LOGIN.GITHUB]: \"github\",\n  [LOGIN.LINKEDIN]: \"linkedin\",\n  [LOGIN.TWITTER]: \"twitter\",\n  [LOGIN.WEIBO]: \"weibo\",\n  [LOGIN.LINE]: \"line\",\n  [LOGIN.EMAIL_PASSWORD]: \"Username-Password-Authentication\",\n  [LOGIN.PASSWORDLESS]: \"email\",\n};\n\nexport const padUrlString = (url: URL): string => (url.href.endsWith(\"/\") ? url.href : `${url.href}/`);\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\nexport const broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nfunction caseSensitiveField(field: string, isCaseSensitive?: boolean): string {\n  return isCaseSensitive ? field : field.toLowerCase();\n}\n\nexport const getVerifierId = (\n  userInfo: Auth0UserInfo,\n  typeOfLogin: LOGIN_TYPE,\n  verifierIdField?: string,\n  isVerifierIdCaseSensitive = true\n): string => {\n  const { name, sub } = userInfo;\n  if (verifierIdField) return caseSensitiveField(userInfo[verifierIdField], isVerifierIdCaseSensitive);\n  switch (typeOfLogin) {\n    case LOGIN.PASSWORDLESS:\n    case LOGIN.EMAIL_PASSWORD:\n      return caseSensitiveField(name, isVerifierIdCaseSensitive);\n    case LOGIN.WEIBO:\n    case LOGIN.GITHUB:\n    case LOGIN.TWITTER:\n    case LOGIN.APPLE:\n    case LOGIN.LINKEDIN:\n    case LOGIN.LINE:\n    case LOGIN.JWT:\n      return caseSensitiveField(sub, isVerifierIdCaseSensitive);\n    default:\n      throw new Error(\"Invalid login type\");\n  }\n};\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: TorusGenericObject\n): { error: string; instanceParameters: TorusGenericObject; hashParameters: TorusGenericObject } => {\n  const hashParameters: TorusGenericObject = hash.split(\"&\").reduce((result, item) => {\n    const [part0, part1] = item.split(\"=\");\n    result[part0] = part1;\n    return result;\n  }, {});\n  log.info(hashParameters, queryParameters);\n  let instanceParameters: TorusGenericObject = {};\n  let error = \"\";\n  if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n    instanceParameters = JSON.parse(atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n    error = hashParameters.error_description || hashParameters.error || error;\n  } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n    instanceParameters = JSON.parse(atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n    if (queryParameters.error) error = queryParameters.error;\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function storageAvailable(type: REDIRECT_PARAMS_STORAGE_METHOD_TYPE): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const isFirefox = (): boolean => window?.navigator?.userAgent.toLowerCase().indexOf(\"firefox\") > -1 || false;\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function are3PCSupported(): boolean {\n  const browserInfo = Bowser.parse(navigator.userAgent);\n  log.info(JSON.stringify(browserInfo), \"current browser info\");\n\n  let thirdPartyCookieSupport = true;\n  // brave\n  if ((navigator as unknown as { brave: boolean })?.brave) {\n    thirdPartyCookieSupport = false;\n  }\n  // All webkit & gecko engine instances use itp (intelligent tracking prevention -\n  // https://webkit.org/tracking-prevention/#intelligent-tracking-prevention-itp)\n  if (browserInfo.engine.name === Bowser.ENGINE_MAP.WebKit || browserInfo.engine.name === Bowser.ENGINE_MAP.Gecko) {\n    thirdPartyCookieSupport = false;\n  }\n\n  return thirdPartyCookieSupport;\n}\n\nexport const validateAndConstructUrl = (domain: string): URL => {\n  try {\n    const url = new URL(decodeURIComponent(domain));\n    return url;\n  } catch (error) {\n    throw new Error(`${error?.message || \"\"}, Note: Your jwt domain: (i.e ${domain}) must have http:// or https:// prefix`);\n  }\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./helpers\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\n\nimport { LOGIN_TYPE, UX_MODE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { broadcastChannelOptions, randomId } from \"../utils/helpers\";\nimport log from \"../utils/loglevel\";\nimport PopupHandler from \"../utils/PopupHandler\";\nimport { Auth0ClientOptions, ILoginHandler, LoginWindowResponse, PopupResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nabstract class AbstractLoginHandler implements ILoginHandler {\n  public nonce: string = randomId();\n\n  public finalURL: URL;\n\n  // Not using object constructor because of this issue\n  // https://github.com/microsoft/TypeScript/issues/5326\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {}\n\n  get state(): string {\n    return encodeURIComponent(\n      window.btoa(\n        JSON.stringify({\n          ...(this.customState || {}),\n          instanceId: this.nonce,\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n          redirectToOpener: this.redirectToOpener || false,\n        })\n      )\n    );\n  }\n\n  handleLoginWindow(params: { locationReplaceOnRedirect?: boolean; popupFeatures?: string }): Promise<LoginWindowResponse> {\n    const verifierWindow = new PopupHandler({ url: this.finalURL, features: params.popupFeatures });\n    if (this.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      return new Promise<LoginWindowResponse>((resolve, reject) => {\n        let bc: BroadcastChannel;\n        const handleData = async (ev: { error: string; data: PopupResponse }) => {\n          try {\n            const { error, data } = ev;\n            const {\n              instanceParams,\n              hashParams: { access_token: accessToken, id_token: idToken, ...rest },\n            } = data || {};\n            if (error) {\n              log.error(ev);\n              reject(new Error(`Error: ${error}. Info: ${JSON.stringify(ev.data || {})}`));\n              return;\n            }\n            if (ev.data && instanceParams.verifier === this.verifier) {\n              log.info(ev.data);\n              if (!this.redirectToOpener && bc) await bc.postMessage({ success: true });\n              resolve({\n                accessToken,\n                idToken: idToken || \"\",\n                ...rest,\n                // State has to be last here otherwise it will be overwritten\n                state: instanceParams,\n              });\n            }\n          } catch (error) {\n            log.error(error);\n            reject(error);\n          }\n        };\n\n        if (!this.redirectToOpener) {\n          bc = new BroadcastChannel(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n          bc.addEventListener(\"message\", async (ev) => {\n            await handleData(ev);\n            bc.close();\n            verifierWindow.close();\n          });\n        } else {\n          const postMessageEventHandler = async (postMessageEvent: MessageEvent) => {\n            if (!postMessageEvent.data) return;\n            const ev = postMessageEvent.data;\n            if (ev.channel !== `redirect_channel_${this.nonce}`) return;\n            window.removeEventListener(\"message\", postMessageEventHandler);\n            handleData(ev);\n            verifierWindow.close();\n          };\n          window.addEventListener(\"message\", postMessageEventHandler);\n        }\n        verifierWindow.open();\n        verifierWindow.once(\"close\", () => {\n          if (bc) bc.close();\n          reject(new Error(\"user closed popup\"));\n        });\n      });\n    }\n    return null;\n  }\n\n  abstract getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse>;\n\n  abstract setFinalUrl(): void;\n}\n\nexport default AbstractLoginHandler;\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class DiscordHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"identify email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://discord.com/api/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ id: string; username: string; discriminator: string; avatar?: string; email?: string }>(\n      \"https://discord.com/api/users/@me\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    const { id, avatar, email = \"\", username: name = \"\", discriminator = \"\" } = userInfo;\n    const profileImage =\n      avatar === null\n        ? `https://cdn.discord.com/embed/avatars/${Number(discriminator) % 5}.png`\n        : `https://cdn.discord.com/avatars/${id}/${avatar}.png?size=2048`;\n    return {\n      profileImage,\n      name: `${name}#${discriminator}`,\n      email,\n      verifierId: id,\n      verifier: this.verifier,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class FacebookHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"public_profile email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://www.facebook.com/v15.0/dialog/oauth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ name: string; id: string; picture: { data: { url?: string } }; email?: string }>(\n      \"https://graph.facebook.com/me?fields=name,email,picture.type(large)\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    const { name = \"\", id, picture, email = \"\" } = userInfo;\n    return {\n      email,\n      name,\n      profileImage: picture.data.url || \"\",\n      verifier: this.verifier,\n      verifierId: id,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class GoogleHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly SCOPE: string = \"profile email openid\";\n\n  private readonly PROMPT: string = \"consent select_account\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        prompt: this.PROMPT,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ picture: string; email: string; name: string }>(\"https://www.googleapis.com/userinfo/v2/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    const { picture: profileImage = \"\", email = \"\", name = \"\" } = userInfo;\n    return {\n      email,\n      name,\n      profileImage,\n      verifier: this.verifier,\n      verifierId: email.toLowerCase(),\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jwt-decode\");","import { get } from \"@toruslabs/http-helpers\";\nimport jwtDecode from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\nimport log from \"loglevel\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { getVerifierId, loginToConnectionMap, padUrlString, validateAndConstructUrl } from \"../utils/helpers\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, Auth0UserInfo, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class JwtHandler extends AbstractLoginHandler {\n  private readonly SCOPE: string = \"openid profile email\";\n\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly PROMPT: string = \"login\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { domain } = this.jwtParams;\n    const finalUrl = validateAndConstructUrl(domain);\n    finalUrl.pathname += finalUrl.pathname.endsWith(\"/\") ? \"authorize\" : \"/authorize\";\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        prompt: this.PROMPT,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        connection: loginToConnectionMap[this.typeOfLogin],\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive, user_info_route = \"userinfo\" } = this.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        const { picture, name, email } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = jwtDecode<Auth0UserInfo>(idToken);\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport jwtDecode from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\nimport log from \"loglevel\";\n\nimport { LOGIN_TYPE, UX_MODE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { constructURL, getVerifierId, padUrlString } from \"../utils/helpers\";\nimport PopupHandler from \"../utils/PopupHandler\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, Auth0UserInfo, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class MockLoginHandler extends AbstractLoginHandler {\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        client_id: this.clientId,\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n\n    this.finalURL = new URL(constructURL({ baseURL: this.redirect_uri, query: null, hash: finalJwtParams }));\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive, user_info_route = \"userinfo\" } = this.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        const { picture, name, email } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = jwtDecode<Auth0UserInfo>(idToken);\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n\n  handleLoginWindow(params: { locationReplaceOnRedirect?: boolean; popupFeatures?: string }): Promise<LoginWindowResponse> {\n    const { id_token: idToken, access_token: accessToken } = this.jwtParams;\n    const verifierWindow = new PopupHandler({ url: this.finalURL, features: params.popupFeatures });\n    if (this.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      return Promise.resolve({\n        state: {},\n        idToken,\n        accessToken,\n      });\n    }\n    return null;\n  }\n}\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport { get, post } from \"@toruslabs/http-helpers\";\nimport jwtDecode from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { broadcastChannelOptions, getVerifierId, padUrlString, validateAndConstructUrl } from \"../utils/helpers\";\nimport log from \"../utils/loglevel\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, Auth0UserInfo, LoginWindowResponse, PopupResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class JwtHandler extends AbstractLoginHandler {\n  private readonly SCOPE: string = \"openid profile email\";\n\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly PROMPT: string = \"login\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { domain } = this.jwtParams;\n    const domainUrl = validateAndConstructUrl(domain);\n\n    domainUrl.pathname = \"/passwordless/start\";\n    this.finalURL = domainUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive } = this.jwtParams;\n    try {\n      const domainUrl = new URL(domain);\n      const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}userinfo`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const { picture, name, email } = userInfo;\n      return {\n        email,\n        name,\n        profileImage: picture,\n        verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    } catch (error) {\n      log.error(error);\n      const decodedToken = jwtDecode(idToken) as Auth0UserInfo;\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n  }\n\n  handleLoginWindow(): Promise<LoginWindowResponse> {\n    return new Promise<LoginWindowResponse>((resolve, reject) => {\n      if (this.redirectToOpener) {\n        reject(new Error(\"Cannot use redirect to opener for passwordless\"));\n        return;\n      }\n      const handleData = (ev: { error: string; data: PopupResponse }) => {\n        try {\n          const { error, data } = ev;\n          const {\n            instanceParams,\n            hashParams: { access_token: accessToken, id_token: idToken, ...rest },\n          } = data || {};\n          if (error) {\n            log.error(ev.error);\n            reject(new Error(error));\n            return;\n          }\n          if (ev.data && instanceParams.verifier === this.verifier) {\n            log.info(ev.data);\n            resolve({ accessToken, idToken: idToken || \"\", ...rest, state: instanceParams });\n          }\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        }\n      };\n      const bc = new BroadcastChannel(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n      bc.addEventListener(\"message\", async (ev) => {\n        handleData(ev);\n        bc.close();\n      });\n      try {\n        const { connection = \"email\", login_hint } = this.jwtParams;\n        const finalJwtParams = deepmerge(\n          {\n            client_id: this.clientId,\n            connection,\n            email: connection === \"email\" ? login_hint : undefined,\n            phone_number: connection === \"sms\" ? login_hint : undefined,\n            send: \"link\",\n            authParams: {\n              scope: this.SCOPE,\n              state: this.state,\n              response_type: this.RESPONSE_TYPE,\n              redirect_uri: this.redirect_uri,\n              nonce: this.nonce,\n              prompt: this.PROMPT,\n            },\n          },\n          {\n            authParams: this.jwtParams,\n          }\n        );\n        // using stringify and parse to remove undefined params\n        // This method is only resolved when the user clicks the email link\n        post(this.finalURL.href, JSON.parse(JSON.stringify(finalJwtParams)))\n          .then((response) => {\n            log.info(\"posted\", response);\n            return undefined;\n          })\n          .catch((error) => {\n            log.error(error);\n            reject(error);\n          });\n      } catch (error) {\n        log.error(error);\n        reject(error);\n      }\n    });\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class RedditHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"identity\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(`https://www.reddit.com/api/v1/authorize${window.innerWidth < 600 ? \".compact\" : \"\"}`);\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ icon_img: string; name: string }>(\"https://oauth.reddit.com/api/v1/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    const { icon_img: profileImage = \"\", name = \"\" } = userInfo;\n    return {\n      email: \"\",\n      name,\n      profileImage: profileImage.split(\"?\").length > 0 ? profileImage.split(\"?\")[0] : profileImage,\n      verifier: this.verifier,\n      verifierId: name.toLowerCase(),\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class TwitchHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"user:read:email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://id.twitch.tv/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        force_verify: true,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ data: [{ profile_image_url: string; display_name: string; email: string; id: string }] }>(\n      \"https://api.twitch.tv/helix/users\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Client-ID\": this.clientId,\n        },\n      }\n    );\n    const [{ profile_image_url: profileImage = \"\", display_name: name = \"\", email = \"\", id: verifierId }] = userInfo.data || [];\n    return {\n      profileImage,\n      name,\n      email,\n      verifierId,\n      verifier: this.verifier,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport log from \"../utils/loglevel\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse, WebAuthnExtraParams } from \"./interfaces\";\n\nconst WEBAUTHN_LOOKUP_SERVER = \"https://api.webauthn.openlogin.com\";\n\nexport default class WebAuthnHandler extends AbstractLoginHandler {\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject,\n    readonly registerOnly?: boolean\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { webauthnURL } = this.customState || {};\n    const finalUrl = webauthnURL ? new URL(webauthnURL) : new URL(\"https://webauthn.openlogin.com\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        register_only: !!this.registerOnly,\n        state: this.state,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(parameters: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, ref, extraParamsPassed, extraParams } = parameters;\n    let verifierId: string;\n    let signature: string;\n    let clientDataJSON: string;\n    let authenticatorData: string;\n    let publicKey: string;\n    let challenge: string;\n    let rpOrigin: string;\n    let credId: string;\n    let transports: AuthenticatorTransport[];\n\n    if (extraParamsPassed === \"true\") {\n      log.debug(\"extraParamsPassed is true, using extraParams passed through hashParams\");\n      try {\n        ({\n          verifier_id: verifierId,\n          signature,\n          clientDataJSON,\n          authenticatorData,\n          publicKey,\n          challenge,\n          rpOrigin,\n          credId,\n          transports,\n        } = JSON.parse(atob(extraParams)));\n      } catch (error) {\n        log.warn(\"unable to parse extraParams\", error);\n        ({\n          verifier_id: verifierId,\n          signature,\n          clientDataJSON,\n          authenticatorData,\n          publicKey,\n          challenge,\n          rpOrigin,\n          credId,\n          transports,\n        } = await get<WebAuthnExtraParams & { verifier_id: string }>(`${WEBAUTHN_LOOKUP_SERVER}/signature/fetch/${idToken}`));\n      }\n    } else {\n      log.debug(\"extraParamsPassed is false, using extraParams passed through bridge server\");\n      ({\n        verifier_id: verifierId,\n        signature,\n        clientDataJSON,\n        authenticatorData,\n        publicKey,\n        challenge,\n        rpOrigin,\n        credId,\n        transports,\n      } = await get<WebAuthnExtraParams & { verifier_id: string }>(`${WEBAUTHN_LOOKUP_SERVER}/signature/fetch/${idToken}`));\n    }\n\n    if (signature !== idToken) {\n      throw new Error(\"idtoken should be equal to signature\");\n    }\n\n    return {\n      email: \"\",\n      name: \"WebAuthn Login\",\n      profileImage: \"\",\n      verifier: this.verifier,\n      verifierId,\n      typeOfLogin: this.typeOfLogin,\n      ref,\n      registerOnly: this.registerOnly,\n      extraVerifierParams: {\n        signature,\n        clientDataJSON,\n        authenticatorData,\n        publicKey,\n        challenge,\n        rpOrigin,\n        credId,\n        transports,\n      },\n    };\n  }\n}\n","import { LOGIN } from \"../utils/enums\";\nimport DiscordHandler from \"./DiscordHandler\";\nimport FacebookHandler from \"./FacebookHandler\";\nimport GoogleHandler from \"./GoogleHandler\";\nimport { CreateHandlerParams, ILoginHandler } from \"./interfaces\";\nimport JwtHandler from \"./JwtHandler\";\nimport MockLoginHandler from \"./MockLoginHandler\";\nimport PasswordlessHandler from \"./PasswordlessHandler\";\nimport RedditHandler from \"./RedditHandler\";\nimport TwitchHandler from \"./TwitchHandler\";\nimport WebAuthnHandler from \"./WebAuthnHandler\";\n\nconst createHandler = ({\n  clientId,\n  redirect_uri,\n  typeOfLogin,\n  verifier,\n  jwtParams,\n  redirectToOpener,\n  uxMode,\n  customState,\n  registerOnly,\n}: CreateHandlerParams): ILoginHandler => {\n  if (!verifier || !typeOfLogin || !clientId) {\n    throw new Error(\"Invalid params\");\n  }\n  const { domain, login_hint, id_token, access_token } = jwtParams || {};\n  switch (typeOfLogin) {\n    case LOGIN.GOOGLE:\n      return new GoogleHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.FACEBOOK:\n      return new FacebookHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.TWITCH:\n      return new TwitchHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.REDDIT:\n      return new RedditHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.DISCORD:\n      return new DiscordHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.PASSWORDLESS:\n      if (!domain || !login_hint) throw new Error(\"Invalid params\");\n      return new PasswordlessHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.APPLE:\n    case LOGIN.GITHUB:\n    case LOGIN.LINKEDIN:\n    case LOGIN.TWITTER:\n    case LOGIN.WEIBO:\n    case LOGIN.LINE:\n    case LOGIN.EMAIL_PASSWORD:\n    case LOGIN.JWT:\n      if (id_token || access_token) {\n        return new MockLoginHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n      }\n      if (!domain) throw new Error(\"Invalid params\");\n      return new JwtHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.WEBAUTHN:\n      return new WebAuthnHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState, registerOnly);\n    default:\n      throw new Error(\"Invalid login type\");\n  }\n};\n\nexport default createHandler;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus.js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"web3-utils\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@chaitanyapotti/register-service-worker\");","import { register } from \"@chaitanyapotti/register-service-worker\";\n\nimport log from \"./utils/loglevel\";\n\nexport const registerServiceWorker = (baseUrl: string) =>\n  new Promise((resolve, reject) => {\n    const swUrl = `${baseUrl}sw.js`;\n\n    if (\"serviceWorker\" in window.navigator) {\n      // if swIntegrity is not calculated\n      register(swUrl, {\n        ready() {\n          log.info(\"App is being served from cache by a service worker.\\n For more details, visit https://goo.gl/AFskqB\");\n          resolve(undefined);\n        },\n        registered() {\n          log.info(\"Service worker has been registered.\");\n          resolve(undefined);\n        },\n        cached() {\n          log.info(\"Content has been cached for offline use.\");\n          resolve(undefined);\n        },\n        updatefound() {\n          log.info(\"New content is downloading.\");\n        },\n        updated() {\n          log.info(\"New content is available; please refresh.\");\n        },\n        offline() {\n          log.info(\"No internet connection found. App is running in offline mode.\");\n          reject(new Error(\"App is offline\"));\n        },\n        error(error) {\n          log.error(\"Error during service worker registration:\", error);\n          reject(error);\n        },\n      });\n    } else {\n      reject(new Error(\"Service workers are not supported\"));\n    }\n  });\n","import type { Transaction, TransactionContext } from \"@sentry/types\";\n\nimport { SENTRY_TXNS } from \"./utils/enums\";\n\nexport interface Sentry {\n  startTransaction(_: TransactionContext): Transaction;\n}\nexport default class SentryHandler {\n  sentry: Sentry | null = null;\n\n  chainUrl = \"\";\n\n  constructor(sentry?: Sentry, chainUrl?: string) {\n    this.sentry = sentry;\n    this.chainUrl = chainUrl;\n  }\n\n  startTransaction(context: TransactionContext): Transaction | void {\n    if (this.sentry) {\n      if (context.name === SENTRY_TXNS.FETCH_NODE_DETAILS && this.chainUrl) {\n        context.name += this.chainUrl;\n      }\n      return this.sentry.startTransaction(context);\n    }\n  }\n\n  finishTransaction(tx: void | Transaction): void {\n    if (tx) {\n      tx.finish();\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/eccrypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/metadata-helpers\");","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { get, post } from \"@toruslabs/http-helpers\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\n\nimport { LoginDetails } from \"../handlers/interfaces\";\nimport { REDIRECT_PARAMS_STORAGE_METHOD, REDIRECT_PARAMS_STORAGE_METHOD_TYPE } from \"./enums\";\nimport { are3PCSupported, storageAvailable } from \"./helpers\";\nimport log from \"./loglevel\";\n\nclass StorageHelper {\n  private currentStorageMethod: REDIRECT_PARAMS_STORAGE_METHOD_TYPE = REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE;\n\n  private isInitialized = false;\n\n  private storageServerUrl = \"https://broadcast-server.tor.us\";\n\n  constructor(serverUrl: string) {\n    this.storageServerUrl = serverUrl;\n  }\n\n  init() {\n    const support = are3PCSupported();\n    const localStorageAvailable = storageAvailable(REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE);\n    if (support && localStorageAvailable) {\n      // use local storage as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE;\n    } else {\n      // use server store as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.SERVER;\n    }\n    this.isInitialized = true;\n  }\n\n  async storeLoginDetails(params: LoginDetails, scope: string): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(scope);\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      const encData = await encryptData(privKeyHex, params);\n      const signature = (await sign(privKey, keccak256(encData))).toString(\"hex\");\n      await post(`${this.storageServerUrl}/store/set`, { key: publicKeyHex, data: encData, signature });\n    } else {\n      window.localStorage.setItem(`torus_login_${scope}`, JSON.stringify(params));\n    }\n  }\n\n  async retrieveLoginDetails(scope: string): Promise<LoginDetails> {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(scope);\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      try {\n        const encData: { message: string; success: boolean } = await get(`${this.storageServerUrl}/store/get?key=${publicKeyHex}`);\n        if (encData.message) {\n          const loginDetails = await decryptData<LoginDetails>(privKeyHex, encData.message);\n          return loginDetails;\n        }\n      } catch (error) {\n        if ((error as Response).status === 404) {\n          log.warn(error, \"Session likely expired\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    const loginDetails = window.localStorage.getItem(`torus_login_${scope}`);\n    return JSON.parse(loginDetails || \"{}\") as LoginDetails;\n  }\n\n  clearLoginDetailsStorage(scope: string): void {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE) {\n      window.localStorage.removeItem(`torus_login_${scope}`);\n    }\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n\n  clearOrphanedLoginDetails(): void {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE) {\n      const allStorageKeys = Object.keys(window.localStorage);\n      allStorageKeys.forEach((key) => {\n        if (key.startsWith(\"torus_login_\")) {\n          window.localStorage.removeItem(key);\n        }\n      });\n    }\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n}\n\nexport default StorageHelper;\n","import { TORUS_NETWORK } from \"@toruslabs/fetch-node-details\";\nimport Torus from \"@toruslabs/torus.js\";\nimport { keccak256 } from \"web3-utils\";\n\nimport createHandler from \"./handlers/HandlerFactory\";\nimport {\n  AggregateLoginParams,\n  CustomAuthArgs,\n  ExtraParams,\n  HybridAggregateLoginParams,\n  ILoginHandler,\n  InitParams,\n  LoginWindowResponse,\n  PointHex,\n  RedirectResult,\n  RedirectResultParams,\n  SingleLoginParams,\n  SubVerifierDetails,\n  TorusAggregateLoginResponse,\n  TorusHybridAggregateLoginResponse,\n  TorusKey,\n  TorusLoginResponse,\n  TorusSubVerifierInfo,\n  TorusVerifierResponse,\n} from \"./handlers/interfaces\";\nimport { registerServiceWorker } from \"./registerServiceWorker\";\nimport SentryHandler from \"./sentry\";\nimport { AGGREGATE_VERIFIER, LOGIN, SENTRY_TXNS, TORUS_METHOD, UX_MODE, UX_MODE_TYPE } from \"./utils/enums\";\nimport { handleRedirectParameters, isFirefox, padUrlString } from \"./utils/helpers\";\nimport log from \"./utils/loglevel\";\nimport StorageHelper from \"./utils/StorageHelper\";\n\nclass CustomAuth {\n  static torusNodeEndpoints = [\n    \"https://sapphire-1.auth.network/sss/jrpc\",\n    \"https://sapphire-2.auth.network/sss/jrpc\",\n    \"https://sapphire-3.auth.network/sss/jrpc\",\n    \"https://sapphire-4.auth.network/sss/jrpc\",\n    \"https://sapphire-5.auth.network/sss/jrpc\",\n  ];\n\n  static torusPubKeys: PointHex[] = [\n    {\n      x: \"e0925898fee0e9e941fdca7ee88deec99939ae9407e923535c4d4a3a3ff8b052\",\n      y: \"54b9fea924e3f3e40791f9987f4234ae4222412d65b74068032fa5d8b63375c1\",\n    },\n    {\n      x: \"9124cf1e280aab32ba50dffd2de81cecabc13d82d2c1fe9de82f3b3523f9b637\",\n      y: \"fca939a1ceb42ce745c55b21ef094f543b457630cb63a94ef4f1afeee2b1f107\",\n    },\n    {\n      x: \"555f681a63d469cc6c3a58a97e29ebd277425f0e6159708e7c7bf05f18f89476\",\n      y: \"606f2bcc0884fa5b64366fc3e8362e4939841b56acd60d5f4553cf36b891ac4e\",\n    },\n    {\n      x: \"2b5f58d8e340f1ab922e89b3a69a68930edfe51364644a456335e179bc130128\",\n      y: \"4b4daa05939426e3cbe7d08f0e773d2bf36f64c00d04620ee6df2a7af4d2247\",\n    },\n    {\n      x: \"3ecbb6a68afe72cf34ec6c0a12b5cb78a0d2e83ba402983b6adbc5f36219861a\",\n      y: \"dc1031c5cc8f0472bd521a62a64ebca9e163902c247bf05937daf4ae835091e4\",\n    },\n  ];\n\n  static nodeIndexes = [1, 2, 3, 4, 5];\n\n  isInitialized: boolean;\n\n  config: {\n    baseUrl: string;\n    redirectToOpener: boolean;\n    redirect_uri: string;\n    uxMode: UX_MODE_TYPE;\n    locationReplaceOnRedirect: boolean;\n    popupFeatures: string;\n  };\n\n  torus: Torus;\n\n  // nodeDetailManager: NodeDetailManager;\n\n  storageHelper: StorageHelper;\n\n  sentryHandler: SentryHandler;\n\n  proxyRequestURL: string;\n\n  constructor({\n    baseUrl,\n    network = TORUS_NETWORK.MAINNET,\n    enableLogging = false,\n    enableOneKey = false,\n    redirectToOpener = false,\n    redirectPathName = \"redirect\",\n    apiKey = \"torus-default\",\n    uxMode = UX_MODE.POPUP,\n    locationReplaceOnRedirect = false,\n    popupFeatures,\n    metadataUrl = \"https://metadata.tor.us\",\n    storageServerUrl = \"https://broadcast-server.tor.us\",\n    networkUrl,\n    sentry,\n    proxyRequestURL,\n  }: CustomAuthArgs) {\n    this.proxyRequestURL = proxyRequestURL;\n    this.isInitialized = false;\n    const baseUri = new URL(baseUrl);\n    this.config = {\n      baseUrl: padUrlString(baseUri),\n      get redirect_uri() {\n        return `${this.baseUrl}${redirectPathName}`;\n      },\n      redirectToOpener,\n      uxMode,\n      locationReplaceOnRedirect,\n      popupFeatures,\n    };\n    const torus = new Torus({\n      enableOneKey,\n      metadataHost: metadataUrl,\n      network,\n    });\n    Torus.setAPIKey(apiKey);\n    this.torus = torus;\n    // this.nodeDetailManager = new NodeDetailManager({ network: networkUrl || network, proxyAddress: CONTRACT_MAP[network] });\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.storageHelper = new StorageHelper(storageServerUrl);\n    this.sentryHandler = new SentryHandler(sentry, networkUrl);\n  }\n\n  static getSSSEndpoints() {\n    return CustomAuth.torusNodeEndpoints.map((endpoint) => {\n      return `${endpoint}/sss/jrpc`;\n    });\n  }\n\n  static getTSSEndpoints() {\n    return CustomAuth.torusNodeEndpoints.map((endpoint) => {\n      return `${endpoint}/tss`;\n    });\n  }\n\n  static getRSSEndpoints() {\n    return CustomAuth.torusNodeEndpoints.map((endpoint) => {\n      return `${endpoint}/rss`;\n    });\n  }\n\n  async init({ skipSw = false, skipInit = false, skipPrefetch = false }: InitParams = {}): Promise<void> {\n    this.storageHelper.init();\n    if (skipInit) {\n      this.isInitialized = true;\n      return;\n    }\n    if (!skipSw) {\n      const fetchSwResponse = await fetch(`${this.config.baseUrl}sw.js`, { cache: \"reload\" });\n      if (fetchSwResponse.ok) {\n        try {\n          await registerServiceWorker(this.config.baseUrl);\n          this.isInitialized = true;\n          return;\n        } catch (error) {\n          log.warn(error);\n        }\n      } else {\n        throw new Error(\"Service worker is not being served. Please serve it\");\n      }\n    }\n    if (!skipPrefetch) {\n      // Skip the redirect check for firefox\n      if (isFirefox()) {\n        this.isInitialized = true;\n        return;\n      }\n      await this.handlePrefetchRedirectUri();\n      return;\n    }\n    this.isInitialized = true;\n  }\n\n  async triggerLogin(args: SingleLoginParams & { useTSS?: boolean }): Promise<TorusLoginResponse> {\n    const { verifier, typeOfLogin, clientId, jwtParams, hash, queryParameters, customState, registerOnly, useTSS } = args;\n    log.info(\"Verifier: \", verifier);\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (registerOnly && typeOfLogin !== LOGIN.WEBAUTHN) throw new Error(\"registerOnly flag can only be passed for webauthn\");\n    const loginHandler: ILoginHandler = createHandler({\n      typeOfLogin,\n      clientId,\n      verifier,\n      redirect_uri: this.config.redirect_uri,\n      redirectToOpener: this.config.redirectToOpener,\n      jwtParams,\n      uxMode: this.config.uxMode,\n      customState,\n      registerOnly,\n    });\n    let loginParams: LoginWindowResponse;\n    if (hash && queryParameters) {\n      const { error, hashParameters, instanceParameters } = handleRedirectParameters(hash, queryParameters);\n      if (error) throw new Error(error);\n      const { access_token: accessToken, id_token: idToken, ...rest } = hashParameters;\n      // State has to be last here otherwise it will be overwritten\n      loginParams = { accessToken, idToken, ...rest, state: instanceParameters };\n    } else {\n      this.storageHelper.clearOrphanedLoginDetails();\n      if (this.config.uxMode === UX_MODE.REDIRECT) {\n        await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_LOGIN, args }, loginHandler.nonce);\n      }\n      loginParams = await loginHandler.handleLoginWindow({\n        locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n        popupFeatures: this.config.popupFeatures,\n      });\n      if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n    }\n\n    const userInfo = await loginHandler.getUserInfo(loginParams);\n    if (registerOnly) {\n      const nodeTx = this.sentryHandler.startTransaction({\n        name: SENTRY_TXNS.FETCH_NODE_DETAILS,\n      });\n      this.sentryHandler.finishTransaction(nodeTx);\n      const lookupTx = this.sentryHandler.startTransaction({\n        name: SENTRY_TXNS.PUB_ADDRESS_LOOKUP,\n      });\n      const torusPubKey = await this.torus.getPublicAddress(CustomAuth.getSSSEndpoints(), { verifier, verifierId: userInfo.verifierId }, true);\n      this.sentryHandler.finishTransaction(lookupTx);\n      const res = {\n        userInfo: {\n          ...userInfo,\n          ...loginParams,\n        },\n      };\n      if (typeof torusPubKey === \"string\") {\n        throw new Error(\"should have returned extended pub key\");\n      }\n      const torusKey: TorusKey = {\n        pubKey: {\n          pub_key_X: torusPubKey.X,\n          pub_key_Y: torusPubKey.Y,\n        },\n        publicAddress: torusPubKey.address,\n        privateKey: null,\n        metadataNonce: null,\n        signatures: [],\n      };\n      return { ...res, ...torusKey };\n    }\n\n    const torusKey = await this.getTorusKey(\n      verifier,\n      userInfo.verifierId,\n      { verifier_id: userInfo.verifierId },\n      loginParams.idToken || loginParams.accessToken,\n      userInfo.extraVerifierParams,\n      !!useTSS\n    );\n    return {\n      ...torusKey,\n      userInfo: {\n        ...userInfo,\n        ...loginParams,\n      },\n    };\n  }\n\n  async triggerAggregateLogin(args: AggregateLoginParams & { useTSS?: boolean }): Promise<TorusAggregateLoginResponse> {\n    // This method shall break if any of the promises fail. This behaviour is intended\n    const { aggregateVerifierType, verifierIdentifier, subVerifierDetailsArray, useTSS } = args;\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (!aggregateVerifierType || !verifierIdentifier || !Array.isArray(subVerifierDetailsArray)) {\n      throw new Error(\"Invalid params\");\n    }\n    if (aggregateVerifierType === AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID && subVerifierDetailsArray.length !== 1) {\n      throw new Error(\"Single id verifier can only have one sub verifier\");\n    }\n    const userInfoPromises: Promise<TorusVerifierResponse>[] = [];\n    const loginParamsArray: LoginWindowResponse[] = [];\n    for (const subVerifierDetail of subVerifierDetailsArray) {\n      const { clientId, typeOfLogin, verifier, jwtParams, hash, queryParameters, customState } = subVerifierDetail;\n      const loginHandler: ILoginHandler = createHandler({\n        typeOfLogin,\n        clientId,\n        verifier,\n        redirect_uri: this.config.redirect_uri,\n        redirectToOpener: this.config.redirectToOpener,\n        jwtParams,\n        uxMode: this.config.uxMode,\n        customState,\n      });\n      // We let the user login to each verifier in a loop. Don't wait for key derivation here.!\n      let loginParams: LoginWindowResponse;\n      if (hash && queryParameters) {\n        const { error, hashParameters, instanceParameters } = handleRedirectParameters(hash, queryParameters);\n        if (error) throw new Error(error);\n        const { access_token: accessToken, id_token: idToken, ...rest } = hashParameters;\n        // State has to be last here otherwise it will be overwritten\n        loginParams = { accessToken, idToken, ...rest, state: instanceParameters };\n      } else {\n        this.storageHelper.clearOrphanedLoginDetails();\n        if (this.config.uxMode === UX_MODE.REDIRECT) {\n          await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN, args }, loginHandler.nonce);\n        }\n        loginParams = await loginHandler.handleLoginWindow({\n          locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n          popupFeatures: this.config.popupFeatures,\n        });\n        if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n      }\n      // Fail the method even if one promise fails\n\n      userInfoPromises.push(loginHandler.getUserInfo(loginParams));\n      loginParamsArray.push(loginParams);\n    }\n    const _userInfoArray = await Promise.all(userInfoPromises);\n    const userInfoArray = _userInfoArray.map((userInfo) => ({ ...userInfo, aggregateVerifier: verifierIdentifier }));\n    const aggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let aggregateVerifierId = \"\";\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierDetailsArray.length; index += 1) {\n      const loginParams = loginParamsArray[index];\n      const { idToken, accessToken } = loginParams;\n      const userInfo = userInfoArray[index];\n      aggregateVerifierParams.verify_params.push({ verifier_id: userInfo.verifierId, idtoken: idToken || accessToken });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(idToken || accessToken);\n      aggregateVerifierId = userInfo.verifierId; // using last because idk\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(aggregateIdTokenSeeds.join(String.fromCharCode(29))).slice(2);\n    aggregateVerifierParams.verifier_id = aggregateVerifierId;\n    const torusKey = await this.getTorusKey(\n      verifierIdentifier,\n      aggregateVerifierId,\n      aggregateVerifierParams,\n      aggregateIdToken,\n      extraVerifierParams,\n      useTSS\n    );\n    return {\n      ...torusKey,\n      userInfo: userInfoArray.map((x, index) => ({ ...x, ...loginParamsArray[index] })),\n    };\n  }\n\n  async triggerHybridAggregateLogin(args: HybridAggregateLoginParams & { useTSS?: boolean }): Promise<TorusHybridAggregateLoginResponse> {\n    const { singleLogin, aggregateLoginParams, useTSS } = args;\n    // This method shall break if any of the promises fail. This behaviour is intended\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (\n      !aggregateLoginParams.aggregateVerifierType ||\n      !aggregateLoginParams.verifierIdentifier ||\n      !Array.isArray(aggregateLoginParams.subVerifierDetailsArray)\n    ) {\n      throw new Error(\"Invalid params\");\n    }\n    if (\n      aggregateLoginParams.aggregateVerifierType === AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID &&\n      aggregateLoginParams.subVerifierDetailsArray.length !== 1\n    ) {\n      throw new Error(\"Single id verifier can only have one sub verifier\");\n    }\n    const { typeOfLogin, clientId, verifier, jwtParams, hash, queryParameters, customState } = singleLogin;\n    const loginHandler: ILoginHandler = createHandler({\n      typeOfLogin,\n      clientId,\n      verifier,\n      redirect_uri: this.config.redirect_uri,\n      redirectToOpener: this.config.redirectToOpener,\n      jwtParams,\n      uxMode: this.config.uxMode,\n      customState,\n    });\n    let loginParams: LoginWindowResponse;\n    if (hash && queryParameters) {\n      const { error, hashParameters, instanceParameters } = handleRedirectParameters(hash, queryParameters);\n      if (error) throw new Error(error);\n      const { access_token: accessToken, id_token: idToken, ...rest } = hashParameters;\n      // State has to be last here otherwise it will be overwritten\n      loginParams = { accessToken, idToken, ...rest, state: instanceParameters };\n    } else {\n      this.storageHelper.clearOrphanedLoginDetails();\n      if (this.config.uxMode === UX_MODE.REDIRECT) {\n        await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN, args }, loginHandler.nonce);\n      }\n      loginParams = await loginHandler.handleLoginWindow({\n        locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n        popupFeatures: this.config.popupFeatures,\n      });\n      if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n    }\n\n    const userInfo = await loginHandler.getUserInfo(loginParams);\n    const torusKey1Promise = this.getTorusKey(\n      verifier,\n      userInfo.verifierId,\n      { verifier_id: userInfo.verifierId },\n      loginParams.idToken || loginParams.accessToken,\n      userInfo.extraVerifierParams,\n      useTSS\n    );\n\n    const { verifierIdentifier, subVerifierDetailsArray } = aggregateLoginParams;\n    const aggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let aggregateVerifierId = \"\";\n    for (let index = 0; index < subVerifierDetailsArray.length; index += 1) {\n      const sub = subVerifierDetailsArray[index];\n      const { idToken, accessToken } = loginParams;\n      aggregateVerifierParams.verify_params.push({ verifier_id: userInfo.verifierId, idtoken: idToken || accessToken });\n      aggregateVerifierParams.sub_verifier_ids.push(sub.verifier);\n      aggregateIdTokenSeeds.push(idToken || accessToken);\n      aggregateVerifierId = userInfo.verifierId; // using last because idk\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(aggregateIdTokenSeeds.join(String.fromCharCode(29))).slice(2);\n    aggregateVerifierParams.verifier_id = aggregateVerifierId;\n    const torusKey2Promise = this.getTorusKey(\n      verifierIdentifier,\n      aggregateVerifierId,\n      aggregateVerifierParams,\n      aggregateIdToken,\n      userInfo.extraVerifierParams,\n      useTSS\n    );\n    const [torusKey1, torusKey2] = await Promise.all([torusKey1Promise, torusKey2Promise]);\n    return {\n      singleLogin: {\n        userInfo: { ...userInfo, ...loginParams },\n        ...torusKey1,\n      },\n      aggregateLogins: [torusKey2],\n    };\n  }\n\n  async getTorusKey(\n    verifier: string,\n    verifierId: string,\n    verifierParams: { verifier_id: string },\n    idToken: string,\n    additionalParams?: ExtraParams,\n    useTSS?: boolean\n  ): Promise<TorusKey> {\n    const nodeTx = this.sentryHandler.startTransaction({\n      name: SENTRY_TXNS.FETCH_NODE_DETAILS,\n    });\n    // const { torusNodeEndpoints, torusNodePub, torusIndexes } = await this.nodeDetailManager.getNodeDetails({ verifier, verifierId });\n    this.sentryHandler.finishTransaction(nodeTx);\n    log.debug(\"torus-direct/getTorusKey\", { torusNodeEndpoints: CustomAuth.getSSSEndpoints() });\n\n    const pubLookupTx = this.sentryHandler.startTransaction({\n      name: SENTRY_TXNS.PUB_ADDRESS_LOOKUP,\n    });\n    this.sentryHandler.finishTransaction(pubLookupTx);\n\n    const sharesTx = this.sentryHandler.startTransaction({\n      name: SENTRY_TXNS.FETCH_SHARES,\n    });\n    const shares = await this.torus.retrieveShares(CustomAuth.getSSSEndpoints(), verifier, verifierParams, idToken, {\n      ...additionalParams,\n      ...(useTSS && { proxyRequestURL: this.proxyRequestURL }),\n    });\n    this.sentryHandler.finishTransaction(sharesTx);\n    log.debug(\"torus-direct/getTorusKey\", { retrieveShares: shares });\n\n    const signatures = (shares.sessionTokensData || []).map((x) => {\n      if (!x) return null;\n      return JSON.stringify({\n        data: x.token,\n        sig: x.signature,\n      });\n    });\n    return {\n      publicAddress: shares.ethAddress.toString(),\n      privateKey: shares.privKey.toString(),\n      metadataNonce: shares.metadataNonce.toString(\"hex\"),\n      pubKey: {\n        pub_key_X: shares.X,\n        pub_key_Y: shares.Y,\n      },\n      signatures,\n    };\n  }\n\n  async getAggregateTorusKey(\n    verifier: string,\n    verifierId: string, // unique identifier for user e.g. sub on jwt\n    subVerifierInfoArray: TorusSubVerifierInfo[],\n    useTSS?: boolean\n  ): Promise<TorusKey> {\n    const aggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierInfoArray.length; index += 1) {\n      const userInfo = subVerifierInfoArray[index];\n      aggregateVerifierParams.verify_params.push({ verifier_id: verifierId, idtoken: userInfo.idToken });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(userInfo.idToken);\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(aggregateIdTokenSeeds.join(String.fromCharCode(29))).slice(2);\n    aggregateVerifierParams.verifier_id = verifierId;\n    return this.getTorusKey(verifier, verifierId, aggregateVerifierParams, aggregateIdToken, extraVerifierParams, useTSS);\n  }\n\n  getPostboxKeyFrom1OutOf1(privKey: string, nonce: string): string {\n    return this.torus.getPostboxKeyFrom1OutOf1(privKey, nonce);\n  }\n\n  async getRedirectResult({ replaceUrl = true, clearLoginDetails = true, useTSS = false }: RedirectResultParams = {}): Promise<RedirectResult> {\n    await this.init({ skipInit: true });\n    const url = new URL(window.location.href);\n    const hash = url.hash.substring(1);\n    const queryParams = {};\n    url.searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n\n    if (replaceUrl) {\n      const cleanUrl = window.location.origin + window.location.pathname;\n      window.history.replaceState(null, \"\", cleanUrl);\n    }\n\n    if (!hash && Object.keys(queryParams).length === 0) {\n      throw new Error(\"Unable to fetch result from OAuth login\");\n    }\n\n    const { error, instanceParameters, hashParameters } = handleRedirectParameters(hash, queryParams);\n\n    const { instanceId } = instanceParameters;\n\n    log.info(instanceId, \"instanceId\");\n\n    const { args, method, ...rest } = await this.storageHelper.retrieveLoginDetails(instanceId);\n    log.info(args, method);\n\n    if (clearLoginDetails) {\n      this.storageHelper.clearLoginDetailsStorage(instanceId);\n    }\n\n    if (error) {\n      return { error, state: instanceParameters || {}, method, result: {}, hashParameters, args };\n    }\n\n    let result: unknown;\n\n    try {\n      if (method === TORUS_METHOD.TRIGGER_LOGIN) {\n        const methodArgs = args as SubVerifierDetails & { registerOnly?: boolean; useTSS?: boolean };\n        methodArgs.hash = hash;\n        methodArgs.queryParameters = queryParams;\n        methodArgs.useTSS = useTSS;\n        result = await this.triggerLogin(methodArgs);\n      } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN) {\n        const methodArgs = args as AggregateLoginParams & { useTSS?: boolean };\n        methodArgs.subVerifierDetailsArray.forEach((x) => {\n          x.hash = hash;\n          x.queryParameters = queryParams;\n        });\n        methodArgs.useTSS = useTSS;\n        result = await this.triggerAggregateLogin(methodArgs);\n      } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN) {\n        const methodArgs = args as HybridAggregateLoginParams & { useTSS?: boolean };\n        methodArgs.singleLogin.hash = hash;\n        methodArgs.singleLogin.queryParameters = queryParams;\n        methodArgs.useTSS = useTSS;\n        result = await this.triggerHybridAggregateLogin(methodArgs);\n      }\n    } catch (err) {\n      log.error(err);\n      return {\n        error: `Could not get result from torus nodes \\n ${err?.message || \"\"}`,\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args,\n        ...rest,\n      };\n    }\n\n    if (!result)\n      return {\n        error: \"Unsupported method type\",\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args,\n        ...rest,\n      };\n\n    return { method, result, state: instanceParameters || {}, hashParameters, args, ...rest };\n  }\n\n  private async handlePrefetchRedirectUri(): Promise<void> {\n    if (!document) return Promise.resolve();\n    return new Promise((resolve, reject) => {\n      const redirectHtml = document.createElement(\"link\");\n      redirectHtml.href = this.config.redirect_uri;\n      if (window.location.origin !== new URL(this.config.redirect_uri).origin) redirectHtml.crossOrigin = \"anonymous\";\n      redirectHtml.type = \"text/html\";\n      redirectHtml.rel = \"prefetch\";\n      const resolveFn = () => {\n        this.isInitialized = true;\n        resolve();\n      };\n      try {\n        if (redirectHtml.relList && redirectHtml.relList.supports) {\n          if (redirectHtml.relList.supports(\"prefetch\")) {\n            redirectHtml.onload = resolveFn;\n            redirectHtml.onerror = () => {\n              reject(new Error(`Please serve redirect.html present in serviceworker folder of this package on ${this.config.redirect_uri}`));\n            };\n            document.head.appendChild(redirectHtml);\n          } else {\n            // Link prefetch is not supported. pass through\n            resolveFn();\n          }\n        } else {\n          // Link prefetch is not detectable. pass through\n          resolveFn();\n        }\n      } catch (err) {\n        resolveFn();\n      }\n    });\n  }\n}\n\nexport default CustomAuth;\n","export { default as createHandler } from \"./handlers/HandlerFactory\";\nexport * from \"./handlers/interfaces\";\nexport { default } from \"./login\";\nexport * from \"./utils/enums\";\nexport * from \"./utils/helpers\";\n"],"names":["NodeDetailManager","TORUS_NETWORK","LOGIN","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","GITHUB","LINKEDIN","TWITTER","WEIBO","LINE","EMAIL_PASSWORD","PASSWORDLESS","JWT","WEBAUTHN","AGGREGATE_VERIFIER","SINGLE_VERIFIER_ID","UX_MODE","POPUP","REDIRECT","REDIRECT_PARAMS_STORAGE_METHOD","LOCAL_STORAGE","SESSION_STORAGE","SERVER","TORUS_METHOD","TRIGGER_LOGIN","TRIGGER_AGGREGATE_LOGIN","TRIGGER_AGGREGATE_HYBRID_LOGIN","CONTRACT_MAP","MAINNET","PROXY_ADDRESS_MAINNET","TESTNET","PROXY_ADDRESS_TESTNET","CYAN","PROXY_ADDRESS_CYAN","AQUA","PROXY_ADDRESS_AQUA","CELESTE","PROXY_ADDRESS_CELESTE","SIGNER_MAP","SENTRY_TXNS","FETCH_NODE_DETAILS","PUB_ADDRESS_LOOKUP","FETCH_SHARES","loglevel","getLogger","Bowser","log","eventToPromise","emitter","Promise","resolve","reject","handler","ev","error","data","removeEventListener","Error","addEventListener","loginToConnectionMap","padUrlString","url","href","endsWith","randomId","Math","random","toString","slice","broadcastChannelOptions","webWorkerSupport","caseSensitiveField","field","isCaseSensitive","toLowerCase","getVerifierId","userInfo","typeOfLogin","verifierIdField","isVerifierIdCaseSensitive","name","sub","handleRedirectParameters","hash","queryParameters","hashParameters","split","reduce","result","item","part0","part1","info","instanceParameters","Object","keys","length","state","JSON","parse","atob","decodeURIComponent","error_description","storageAvailable","type","storage","window","x","setItem","removeItem","e","code","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","isFirefox","navigator","userAgent","indexOf","constructURL","params","baseURL","query","URL","forEach","key","searchParams","append","are3PCSupported","browserInfo","stringify","thirdPartyCookieSupport","brave","engine","ENGINE_MAP","WebKit","Gecko","validateAndConstructUrl","domain","message","EventEmitter","PopupHandler","constructor","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","emit","open","focus","close","redirect","locationReplaceOnRedirect","location","replace","BroadcastChannel","AbstractLoginHandler","clientId","verifier","redirect_uri","uxMode","redirectToOpener","jwtParams","customState","encodeURIComponent","btoa","instanceId","nonce","handleLoginWindow","verifierWindow","finalURL","popupFeatures","bc","handleData","instanceParams","hashParams","access_token","accessToken","id_token","idToken","rest","postMessage","success","postMessageEventHandler","postMessageEvent","channel","once","get","deepmerge","DiscordHandler","setFinalUrl","finalUrl","clonedParams","finalJwtParams","response_type","RESPONSE_TYPE","client_id","scope","SCOPE","getUserInfo","headers","Authorization","id","avatar","email","username","discriminator","profileImage","verifierId","FacebookHandler","picture","GoogleHandler","prompt","PROMPT","jwtDecode","JwtHandler","pathname","connection","user_info_route","domainUrl","warn","decodedToken","MockLoginHandler","post","login_hint","phone_number","send","authParams","then","response","catch","RedditHandler","icon_img","TwitchHandler","force_verify","profile_image_url","display_name","WEBAUTHN_LOOKUP_SERVER","WebAuthnHandler","registerOnly","webauthnURL","register_only","parameters","ref","extraParamsPassed","extraParams","signature","clientDataJSON","authenticatorData","publicKey","challenge","rpOrigin","credId","transports","debug","verifier_id","extraVerifierParams","PasswordlessHandler","createHandler","register","registerServiceWorker","baseUrl","swUrl","ready","registered","cached","updatefound","updated","offline","SentryHandler","sentry","chainUrl","startTransaction","context","finishTransaction","tx","finish","getPublic","sign","decryptData","encryptData","keccak256","StorageHelper","serverUrl","storageServerUrl","init","support","localStorageAvailable","currentStorageMethod","isInitialized","storeLoginDetails","privKey","privKeyHex","publicKeyHex","encData","localStorage","retrieveLoginDetails","loginDetails","status","getItem","clearLoginDetailsStorage","clearOrphanedLoginDetails","allStorageKeys","startsWith","Torus","CustomAuth","network","enableLogging","enableOneKey","redirectPathName","apiKey","metadataUrl","networkUrl","proxyRequestURL","baseUri","config","torus","metadataHost","setAPIKey","enableAll","disableAll","storageHelper","sentryHandler","getSSSEndpoints","torusNodeEndpoints","map","endpoint","getTSSEndpoints","getRSSEndpoints","skipSw","skipInit","skipPrefetch","fetchSwResponse","fetch","cache","ok","handlePrefetchRedirectUri","triggerLogin","args","useTSS","loginHandler","loginParams","method","nodeTx","lookupTx","torusPubKey","getPublicAddress","res","torusKey","pubKey","pub_key_X","X","pub_key_Y","Y","publicAddress","address","privateKey","metadataNonce","signatures","getTorusKey","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","Array","isArray","userInfoPromises","loginParamsArray","subVerifierDetail","push","_userInfoArray","all","userInfoArray","aggregateVerifier","aggregateVerifierParams","verify_params","sub_verifier_ids","aggregateIdTokenSeeds","aggregateVerifierId","index","idtoken","sort","aggregateIdToken","join","String","fromCharCode","triggerHybridAggregateLogin","singleLogin","aggregateLoginParams","torusKey1Promise","torusKey2Promise","torusKey1","torusKey2","aggregateLogins","verifierParams","additionalParams","pubLookupTx","sharesTx","shares","retrieveShares","sessionTokensData","token","sig","ethAddress","getAggregateTorusKey","subVerifierInfoArray","getPostboxKeyFrom1OutOf1","getRedirectResult","replaceUrl","clearLoginDetails","substring","queryParams","value","cleanUrl","origin","history","replaceState","methodArgs","err","redirectHtml","createElement","crossOrigin","rel","resolveFn","relList","supports","onload","onerror","head","appendChild","y","default"],"sourceRoot":""}